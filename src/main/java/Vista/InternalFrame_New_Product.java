/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import javax.swing.ImageIcon;
import javax.swing.UIManager;
import Controlador.Controlador_Producto;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.sql.SQLException;
import java.util.logging.Logger;
import com.mycompany.project_version_02.MySQL_Connection;
import java.util.logging.Level;
import Modelo.Modelo_Producto;

/**
 *
 * @author JuanCin20
 */
public class InternalFrame_New_Product extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalFrame_New_Product
     */
    public InternalFrame_New_Product() {
        initComponents();
        this.setTitle("Pc - Factory Desktop App: New Product");
        this.Show_ComboBox_01_Content_Alternative();
        this.Show_ComboBox_02_Content_Alternative();
        UIManager.put("OptionPane.okButtonText", "Aceptar");
        UIManager.put("OptionPane.cancelButtonText", "Cancelar");
    }
    private final Controlador_Producto Obj_Controlador_Producto = new Controlador_Producto();

    private boolean Validate_Stock_Producto(String Stock_Producto) {
        Pattern Obj_Pattern = Pattern.compile("^[0-9]+$");
        Matcher Obj_Matcher = Obj_Pattern.matcher(Stock_Producto);
        return Obj_Matcher.find();
    }

    private boolean Validate_Precio_Producto(String Precio_Producto) {
        Pattern Obj_Pattern = Pattern.compile("^[1-9]\\d*(\\.\\d+)?$");
        Matcher Obj_Matcher = Obj_Pattern.matcher(Precio_Producto);
        return Obj_Matcher.find();
    }

    private void Show_Confirm_Dialog() {
        InternalFrame_New_User Obj_InternalFrame_New_User = new InternalFrame_New_User();
        ComboBox_01.setBackground(Color.BLUE);
        ComboBox_01.setSelectedIndex(0);
        ComboBox_02.setBackground(Color.BLUE);
        ComboBox_02.setSelectedIndex(0);
        TextField_01.setBackground(Color.BLUE);
        TextField_01.setText("");
        TextField_02.setBackground(Color.BLUE);
        TextField_02.setText("");
        TextField_03.setBackground(Color.BLUE);
        TextField_03.setText("");
        TextArea_01.setBackground(Color.BLUE);
        TextArea_01.setText("");

        int Option_Selected = JOptionPane.showConfirmDialog(null, "Producto Registrado Correctamente.", "Información", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

        switch (Option_Selected) {
            case -1 -> {
                this.dispose();
                Frame_Administrator.DesktopPane_01.add(Obj_InternalFrame_New_User);
                Obj_InternalFrame_New_User.setVisible(true);
                System.out.println("Option_Selected: " + Option_Selected);
            }
            case 0 -> {
                this.dispose();
                Frame_Administrator.DesktopPane_01.add(Obj_InternalFrame_New_User);
                Obj_InternalFrame_New_User.setVisible(true);
                System.out.println("Option_Selected: " + Option_Selected);
            }
            default ->
                System.out.println("Switch_Default_Case");
        }
    }

    private void Show_ComboBox_01_Content_Alternative() {
        ArrayList<String> Obj_ArrayList_String = new ArrayList<>();

        try {
            Obj_ArrayList_String = Obj_Controlador_Producto.ArrayList_Nombre_Categoria_Producto();
        } catch (SQLException | ClassNotFoundException Obj_SQLException_ClassNotFoundException) {
            Logger.getLogger(MySQL_Connection.class.getName()).log(Level.SEVERE, Obj_SQLException_ClassNotFoundException.getMessage());
        }

        for (int i = 0; i < Obj_ArrayList_String.size(); i++) {
            ComboBox_01.addItem(Obj_ArrayList_String.get(i));
        }
    }

    private void Show_ComboBox_02_Content_Alternative() {
        ArrayList<String> Obj_ArrayList_String = new ArrayList<>();

        try {
            Obj_ArrayList_String = Obj_Controlador_Producto.ArrayList_Nombre_Marca_Producto();
        } catch (SQLException | ClassNotFoundException Obj_SQLException_ClassNotFoundException) {
            Logger.getLogger(MySQL_Connection.class.getName()).log(Level.SEVERE, Obj_SQLException_ClassNotFoundException.getMessage());
        }
        for (int i = 0; i < Obj_ArrayList_String.size(); i++) {
            ComboBox_02.addItem(Obj_ArrayList_String.get(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_01 = new javax.swing.JPanel();
        Label_02 = new javax.swing.JLabel();
        Label_03 = new javax.swing.JLabel();
        Label_04 = new javax.swing.JLabel();
        Label_05 = new javax.swing.JLabel();
        Label_06 = new javax.swing.JLabel();
        Label_07 = new javax.swing.JLabel();
        ComboBox_01 = new javax.swing.JComboBox<>();
        ComboBox_02 = new javax.swing.JComboBox<>();
        TextField_01 = new javax.swing.JTextField();
        TextField_02 = new javax.swing.JTextField();
        TextField_03 = new javax.swing.JTextField();
        ScrollPane_01 = new javax.swing.JScrollPane();
        TextArea_01 = new javax.swing.JTextArea();
        Panel_02 = new javax.swing.JPanel();
        Button_01 = new javax.swing.JButton();
        Button_02 = new javax.swing.JButton();
        Label_01 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel_01.setBackground(new java.awt.Color(102, 102, 102));
        Panel_01.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Label_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_02.setForeground(new java.awt.Color(255, 255, 255));
        Label_02.setIcon(new ImageIcon("src//main//java//Imágenes//Product.png"));
        Label_02.setText("Categoría:");

        Label_03.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_03.setForeground(new java.awt.Color(255, 255, 255));
        Label_03.setIcon(new ImageIcon("src//main//java//Imágenes//Product.png"));
        Label_03.setText("Marca:");

        Label_04.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_04.setForeground(new java.awt.Color(255, 255, 255));
        Label_04.setIcon(new ImageIcon("src//main//java//Imágenes//Product.png"));
        Label_04.setText("Nombre:");

        Label_05.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_05.setForeground(new java.awt.Color(255, 255, 255));
        Label_05.setIcon(new ImageIcon("src//main//java//Imágenes//Product.png"));
        Label_05.setText("Stock:");

        Label_06.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_06.setForeground(new java.awt.Color(255, 255, 255));
        Label_06.setIcon(new ImageIcon("src//main//java//Imágenes//Product.png"));
        Label_06.setText("Precio:");

        Label_07.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_07.setForeground(new java.awt.Color(255, 255, 255));
        Label_07.setIcon(new ImageIcon("src//main//java//Imágenes//Product.png"));
        Label_07.setText("Descripción:");

        ComboBox_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        ComboBox_01.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--" }));

        ComboBox_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        ComboBox_02.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Seleccionar--" }));

        TextField_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        TextField_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        TextField_03.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        TextArea_01.setColumns(20);
        TextArea_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        TextArea_01.setRows(5);
        ScrollPane_01.setViewportView(TextArea_01);

        javax.swing.GroupLayout Panel_01Layout = new javax.swing.GroupLayout(Panel_01);
        Panel_01.setLayout(Panel_01Layout);
        Panel_01Layout.setHorizontalGroup(
            Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_01Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_06, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_07, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_04, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_05, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_03, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_02, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TextField_03, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScrollPane_01)
                    .addComponent(TextField_01, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_02, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_01, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_02, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Panel_01Layout.setVerticalGroup(
            Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_01Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_01, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_03, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_04, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_01, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_05, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_06, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_03, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_07, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ScrollPane_01, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(Panel_01, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 460, -1));

        Panel_02.setBackground(new java.awt.Color(102, 102, 102));
        Panel_02.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Button_01.setBackground(new java.awt.Color(51, 204, 0));
        Button_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Button_01.setText("Insertar");
        Button_01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_01ActionPerformed(evt);
            }
        });

        Button_02.setBackground(new java.awt.Color(255, 0, 0));
        Button_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Button_02.setText("Volver");
        Button_02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_02ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_02Layout = new javax.swing.GroupLayout(Panel_02);
        Panel_02.setLayout(Panel_02Layout);
        Panel_02Layout.setHorizontalGroup(
            Panel_02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_02Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button_01, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_02, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Panel_02Layout.setVerticalGroup(
            Panel_02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_02Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_01, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Button_02, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(Panel_02, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, 120, 80));

        Label_01.setIcon(new ImageIcon("src//main//java//Imágenes//Wallpaper_03.png"));
        getContentPane().add(Label_01, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_01ActionPerformed
        // TODO add your handling code here:
        if (((ComboBox_01.getSelectedItem()).toString()).equals("--Seleccionar--")) {
            JOptionPane.showMessageDialog(null, "Campo Requerido: Categoría del Producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            ComboBox_01.setBackground(Color.RED);
        } else {
            if (((ComboBox_02.getSelectedItem()).toString()).equals("--Seleccionar--")) {
                JOptionPane.showMessageDialog(null, "Campo Requerido: Marca del Producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                ComboBox_02.setBackground(Color.RED);
            } else {
                if ((TextField_01.getText()).isEmpty() == true) {
                    JOptionPane.showMessageDialog(null, "Campo Requerido: Nombre del Producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    TextField_01.setBackground(Color.RED);
                    TextField_01.requestFocus();
                } else {
                    if ((TextField_02.getText()).isEmpty() == true) {
                        JOptionPane.showMessageDialog(null, "Campo Requerido: Stock del Producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                        TextField_02.setBackground(Color.RED);
                        TextField_02.requestFocus();
                    } else {
                        if ((TextField_03.getText()).isEmpty() == true) {
                            JOptionPane.showMessageDialog(null, "Campo Requerido: Precio del Producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                            TextField_03.setBackground(Color.RED);
                            TextField_03.requestFocus();
                        } else {
                            if ((TextArea_01.getText()).isEmpty() == true) {
                                JOptionPane.showMessageDialog(null, "Campo Requerido: Descripción del Producto.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                TextArea_01.setBackground(Color.RED);
                                TextArea_01.requestFocus();
                            } else {

                                int ID_Categoria_Producto = ComboBox_01.getSelectedIndex();
                                int ID_Marca_Producto = ComboBox_02.getSelectedIndex();

                                String Nombre_Producto = (TextField_01.getText()).trim();
                                String Stock_Producto = (TextField_02.getText()).trim();
                                String Precio_Producto = (TextField_03.getText()).trim();
                                String Descripcion_Producto = (TextArea_01.getText()).trim();

                                LocalDateTime Obj_LocalDateTime = LocalDateTime.now();
                                DateTimeFormatter Obj_DateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                                String Fecha_Registro_Producto = Obj_LocalDateTime.format(Obj_DateTimeFormatter);

                                if ((Nombre_Producto.length()) > 150) {
                                    JOptionPane.showMessageDialog(null, "El Nombre debe Contener un Máximo de 150 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextField_01.setBackground(Color.RED);
                                    TextField_01.setText("");
                                    TextField_01.requestFocus();
                                } else {
                                    try {
                                        if (Obj_Controlador_Producto.Check_Nombre_Producto(Nombre_Producto) == true) {
                                            JOptionPane.showMessageDialog(null, "El Documento Nacional de Identidad ya se Encuentra Registrado en la Base de Datos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                            TextField_01.setBackground(Color.RED);
                                            TextField_01.setText("");
                                            TextField_01.requestFocus();
                                        } else {
                                            TextField_01.setBackground(Color.GREEN);
                                            System.out.println("Nombre_Producto: Ok!.");
                                        }
                                    } catch (SQLException | ClassNotFoundException Obj_SQLException_ClassNotFoundException) {
                                        Logger.getLogger(MySQL_Connection.class.getName()).log(Level.SEVERE, Obj_SQLException_ClassNotFoundException.getMessage());
                                    }
                                }

                                if (this.Validate_Stock_Producto(Stock_Producto) == false) {
                                    JOptionPane.showMessageDialog(null, "Ingrese un Stock Válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextField_02.setBackground(Color.RED);
                                    TextField_02.setText("");
                                    TextField_02.requestFocus();
                                } else {
                                    if ((Stock_Producto.length()) > 10) {
                                        JOptionPane.showMessageDialog(null, "El Stock debe Contener un Máximo de 10 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                        TextField_02.setBackground(Color.RED);
                                        TextField_02.setText("");
                                        TextField_02.requestFocus();
                                    } else {
                                        TextField_02.setBackground(Color.GREEN);
                                        System.out.println("Stock_Producto: Ok!.");
                                    }
                                }

                                if (this.Validate_Precio_Producto(Precio_Producto) == false) {
                                    JOptionPane.showMessageDialog(null, "Ingrese un Precio Válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextField_03.setBackground(Color.RED);
                                    TextField_03.setText("");
                                    TextField_03.requestFocus();
                                } else {
                                    if ((Precio_Producto.length()) > 10) {
                                        JOptionPane.showMessageDialog(null, "El Stock debe Contener un Máximo de 10 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                        TextField_03.setBackground(Color.RED);
                                        TextField_03.setText("");
                                        TextField_03.requestFocus();
                                    } else {
                                        TextField_03.setBackground(Color.GREEN);
                                        System.out.println("Precio_Producto: Ok!.");
                                    }
                                }

                                if ((Descripcion_Producto.length()) > 260) {
                                    JOptionPane.showMessageDialog(null, "La Descripción debe Contener un Máximo de 260 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextArea_01.setBackground(Color.RED);
                                    TextArea_01.setText("");
                                    TextArea_01.requestFocus();
                                } else {
                                    TextArea_01.setBackground(Color.GREEN);
                                    System.out.println("Descripcion_Producto: Ok!.");
                                }

                                if ((TextField_01.getText()).isEmpty() == true || (TextField_02.getText()).isEmpty() == true || (TextField_03.getText()).isEmpty() == true || (TextArea_01.getText()).isEmpty() == true) {
                                    System.out.println("Try Again!");
                                } else {
                                    Modelo_Producto Obj_Modelo_Producto = new Modelo_Producto();

                                    Obj_Modelo_Producto.setID_Categoria_Producto(ID_Categoria_Producto);
                                    Obj_Modelo_Producto.setID_Marca_Producto(ID_Marca_Producto);
                                    Obj_Modelo_Producto.setNombre_Producto(Nombre_Producto);
                                    Obj_Modelo_Producto.setStock_Producto(Integer.parseInt(Stock_Producto));
                                    Obj_Modelo_Producto.setPrecio_Producto(Double.parseDouble(Precio_Producto));
                                    Obj_Modelo_Producto.setDescripcion_Producto(Descripcion_Producto);

                                    if (Integer.parseInt(Stock_Producto) <= 10) {
                                        Obj_Modelo_Producto.setEstado_Producto(true);
                                    } else {
                                        if (Integer.parseInt(Stock_Producto) > 11) {
                                            Obj_Modelo_Producto.setEstado_Producto(false);
                                        }
                                    }

                                    Obj_Modelo_Producto.setFecha_Registro_Producto(Fecha_Registro_Producto);

                                    try {
                                        if (Obj_Controlador_Producto.Insertar_Producto(Obj_Modelo_Producto) == true) {
                                            this.Show_Confirm_Dialog();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Error al Registrar el Producto.", "Error", JOptionPane.ERROR_MESSAGE);
                                        }
                                    } catch (SQLException | ClassNotFoundException Obj_SQLException_ClassNotFoundException) {
                                        Logger.getLogger(MySQL_Connection.class.getName()).log(Level.SEVERE, Obj_SQLException_ClassNotFoundException.getMessage());
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_Button_01ActionPerformed

    private void Button_02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_02ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_Button_02ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_01;
    private javax.swing.JButton Button_02;
    private javax.swing.JComboBox<String> ComboBox_01;
    private javax.swing.JComboBox<String> ComboBox_02;
    private javax.swing.JLabel Label_01;
    private javax.swing.JLabel Label_02;
    private javax.swing.JLabel Label_03;
    private javax.swing.JLabel Label_04;
    private javax.swing.JLabel Label_05;
    private javax.swing.JLabel Label_06;
    private javax.swing.JLabel Label_07;
    private javax.swing.JPanel Panel_01;
    private javax.swing.JPanel Panel_02;
    private javax.swing.JScrollPane ScrollPane_01;
    private javax.swing.JTextArea TextArea_01;
    private javax.swing.JTextField TextField_01;
    private javax.swing.JTextField TextField_02;
    private javax.swing.JTextField TextField_03;
    // End of variables declaration//GEN-END:variables
}