/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import javax.swing.ImageIcon;
import javax.swing.UIManager;
import Controlador.Controlador_Cliente;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.sql.SQLException;
import java.util.logging.Logger;
import com.mycompany.project_version_02.MySQL_Connection;
import java.util.logging.Level;
import Modelo.Modelo_Cliente;

/**
 *
 * @author JuanCin20
 */
public class InternalFrame_New_Customer extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalFrame_New_Customer
     */
    public InternalFrame_New_Customer() {
        initComponents();
        this.setTitle("Pc - Factory Desktop App: New Customer");
        UIManager.put("OptionPane.okButtonText", "Aceptar");
        UIManager.put("OptionPane.cancelButtonText", "Cancelar");
    }

    private final Controlador_Cliente Obj_Controlador_Cliente = new Controlador_Cliente();

    private boolean Validate_DNI_Cliente(String DNI_Cliente) {
        Pattern Obj_Pattern = Pattern.compile("^[0-9]+$");
        Matcher Obj_Matcher = Obj_Pattern.matcher(DNI_Cliente);
        return Obj_Matcher.find();
    }

    private boolean Validate_Nombre_Cliente(String Nombre_Cliente) {
        Pattern Obj_Pattern = Pattern.compile("^[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\u00E0-\\u00FC]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\u00E0-\\u00FC]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\u00E0-\\u00FC]+$");
        Matcher Obj_Matcher = Obj_Pattern.matcher(Nombre_Cliente);
        return Obj_Matcher.find();
    }

    private boolean Validate_Apellido_Cliente(String Apellido_Cliente) {
        Pattern Obj_Pattern = Pattern.compile("^[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\u00E0-\\u00FC]+(\\s*[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\u00E0-\\u00FC]*)*[a-zA-ZÀ-ÿ\\u00f1\\u00d1\\u00E0-\\u00FC]+$");
        Matcher Obj_Matcher = Obj_Pattern.matcher(Apellido_Cliente);
        return Obj_Matcher.find();
    }

    private void Show_Confirm_Dialog() {
        InternalFrame_New_Customer Obj_InternalFrame_New_Customer = new InternalFrame_New_Customer();
        TextField_01.setBackground(Color.BLUE);
        TextField_01.setText("");
        TextField_02.setBackground(Color.BLUE);
        TextField_02.setText("");
        TextField_03.setBackground(Color.BLUE);
        TextField_03.setText("");
        TextField_04.setBackground(Color.BLUE);
        TextField_04.setText("");
        DateChooser_01.setBackground(Color.BLUE);
        DateChooser_01.setCalendar(null);

        int Option_Selected = JOptionPane.showConfirmDialog(null, "Cliente Registrado Correctamente.", "Información", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

        switch (Option_Selected) {
            case -1 -> {
                this.dispose();
                Frame_Employee.DesktopPane_01.add(Obj_InternalFrame_New_Customer);
                Obj_InternalFrame_New_Customer.setVisible(true);
                System.out.println("Option_Selected: " + Option_Selected);
            }
            case 0 -> {
                this.dispose();
                Frame_Employee.DesktopPane_01.add(Obj_InternalFrame_New_Customer);
                Obj_InternalFrame_New_Customer.setVisible(true);
                System.out.println("Option_Selected: " + Option_Selected);
            }
            default ->
                System.out.println("Switch_Default_Case");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_01 = new javax.swing.JPanel();
        Label_02 = new javax.swing.JLabel();
        Label_03 = new javax.swing.JLabel();
        Label_04 = new javax.swing.JLabel();
        Label_05 = new javax.swing.JLabel();
        Label_06 = new javax.swing.JLabel();
        TextField_01 = new javax.swing.JTextField();
        TextField_02 = new javax.swing.JTextField();
        TextField_03 = new javax.swing.JTextField();
        TextField_04 = new javax.swing.JTextField();
        DateChooser_01 = new com.toedter.calendar.JDateChooser();
        Panel_02 = new javax.swing.JPanel();
        Button_01 = new javax.swing.JButton();
        Button_02 = new javax.swing.JButton();
        Label_01 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Panel_01.setBackground(new java.awt.Color(102, 102, 102));
        Panel_01.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Label_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_02.setForeground(new java.awt.Color(255, 255, 255));
        Label_02.setIcon(new ImageIcon("src//main//java//Imágenes//User_01.png"));
        Label_02.setText("Documento Nacional de Identidad:");

        Label_03.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_03.setForeground(new java.awt.Color(255, 255, 255));
        Label_03.setIcon(new ImageIcon("src//main//java//Imágenes//User_01.png"));
        Label_03.setText("Nombres:");

        Label_04.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_04.setForeground(new java.awt.Color(255, 255, 255));
        Label_04.setIcon(new ImageIcon("src//main//java//Imágenes//User_01.png"));
        Label_04.setText("Apellidos:");

        Label_05.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_05.setForeground(new java.awt.Color(255, 255, 255));
        Label_05.setIcon(new ImageIcon("src//main//java//Imágenes//Address.png"));
        Label_05.setText("Dirección:");

        Label_06.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Label_06.setForeground(new java.awt.Color(255, 255, 255));
        Label_06.setIcon(new ImageIcon("src//main//java//Imágenes//Calendar.png"));
        Label_06.setText("Fecha de Nacimiento:");

        TextField_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        TextField_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        TextField_03.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        TextField_04.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        DateChooser_01.setDateFormatString("dd/MM/yyyy");
        DateChooser_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N

        javax.swing.GroupLayout Panel_01Layout = new javax.swing.GroupLayout(Panel_01);
        Panel_01.setLayout(Panel_01Layout);
        Panel_01Layout.setHorizontalGroup(
            Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_01Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_03, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Label_04, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Panel_01Layout.createSequentialGroup()
                        .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label_05, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Label_06, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Label_02, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextField_01, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateChooser_01, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField_02, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField_03, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField_04, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(37, 37, 37))
        );
        Panel_01Layout.setVerticalGroup(
            Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_01Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_01, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_03, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_02, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_04, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_03, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_05, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField_04, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_01Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label_06, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateChooser_01, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(Panel_01, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 600, -1));

        Panel_02.setBackground(new java.awt.Color(102, 102, 102));
        Panel_02.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Button_01.setBackground(new java.awt.Color(51, 204, 0));
        Button_01.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Button_01.setText("Insertar");
        Button_01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_01ActionPerformed(evt);
            }
        });

        Button_02.setBackground(new java.awt.Color(255, 0, 0));
        Button_02.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        Button_02.setText("Volver");
        Button_02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_02ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_02Layout = new javax.swing.GroupLayout(Panel_02);
        Panel_02.setLayout(Panel_02Layout);
        Panel_02Layout.setHorizontalGroup(
            Panel_02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_02Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Button_01, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button_02, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        Panel_02Layout.setVerticalGroup(
            Panel_02Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_02Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Button_01, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Button_02, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(Panel_02, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, 120, 80));

        Label_01.setIcon(new ImageIcon("src//main//java//Imágenes//Wallpaper_03.png"));
        getContentPane().add(Label_01, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_01ActionPerformed
        // TODO add your handling code here:
        Date Obj_Date = DateChooser_01.getDate();

        if ((TextField_01.getText()).isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Campo Requerido: Documento Nacional de Identidad del Cliente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            TextField_01.setBackground(Color.RED);
            TextField_01.requestFocus();
        } else {
            if ((TextField_02.getText()).isEmpty() == true) {
                JOptionPane.showMessageDialog(null, "Campo Requerido: Nombres del Cliente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                TextField_02.setBackground(Color.RED);
                TextField_02.requestFocus();
            } else {
                if ((TextField_03.getText()).isEmpty() == true) {
                    JOptionPane.showMessageDialog(null, "Campo Requerido: Apellidos del Cliente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    TextField_03.setBackground(Color.RED);
                    TextField_03.requestFocus();
                } else {
                    if ((TextField_04.getText()).isEmpty() == true) {
                        JOptionPane.showMessageDialog(null, "Campo Requerido: Dirección del Cliente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                        TextField_04.setBackground(Color.RED);
                        TextField_04.requestFocus();
                    } else {
                        if (Obj_Date == null) {
                            JOptionPane.showMessageDialog(null, "Campo Requerido: Fecha de Nacimiento del Cliente.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                            DateChooser_01.setBackground(Color.RED);
                        } else {
                            DateChooser_01.setBackground(Color.GREEN);

                            String DNI_Cliente = (TextField_01.getText()).trim();
                            String Nombre_Cliente = (TextField_02.getText()).trim();
                            String Apellido_Cliente = (TextField_03.getText()).trim();
                            String Direccion_Cliente = (TextField_04.getText()).trim();

                            SimpleDateFormat Obj_SimpleDateFormat = new SimpleDateFormat("dd/MM/yyyy");
                            String Fecha_Nacimiento_Cliente = Obj_SimpleDateFormat.format(Obj_Date);

                            LocalDateTime Obj_LocalDateTime = LocalDateTime.now();
                            DateTimeFormatter Obj_DateTimeFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                            String Fecha_Registro_Cliente = Obj_LocalDateTime.format(Obj_DateTimeFormatter);

                            if (this.Validate_DNI_Cliente(DNI_Cliente) == false) {
                                JOptionPane.showMessageDialog(null, "Ingrese un Documento Nacional de Identidad Válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                TextField_01.setBackground(Color.RED);
                                TextField_01.setText("");
                                TextField_01.requestFocus();
                            } else {
                                if ((DNI_Cliente.length()) != 8) {
                                    JOptionPane.showMessageDialog(null, "El Documento Nacional de Identidad debe Contener 8 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextField_01.setBackground(Color.RED);
                                    TextField_01.setText("");
                                    TextField_01.requestFocus();
                                } else {
                                    try {
                                        if (Obj_Controlador_Cliente.Check_DNI_Cliente(DNI_Cliente) == true) {
                                            JOptionPane.showMessageDialog(null, "El Documento Nacional de Identidad ya se Encuentra Registrado en la Base de Datos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                            TextField_01.setBackground(Color.RED);
                                            TextField_01.setText("");
                                            TextField_01.requestFocus();
                                        } else {
                                            TextField_01.setBackground(Color.GREEN);
                                            System.out.println("DNI_Cliente: Ok!.");
                                        }
                                    } catch (SQLException | ClassNotFoundException Obj_SQLException_ClassNotFoundException) {
                                        Logger.getLogger(MySQL_Connection.class.getName()).log(Level.SEVERE, Obj_SQLException_ClassNotFoundException.getMessage());
                                    }
                                }
                            }

                            if (this.Validate_Nombre_Cliente(Nombre_Cliente) == false) {
                                JOptionPane.showMessageDialog(null, "Ingrese Nombres Válidos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                TextField_02.setBackground(Color.RED);
                                TextField_02.setText("");
                                TextField_02.requestFocus();
                            } else {
                                if ((Nombre_Cliente.length()) > 50) {
                                    JOptionPane.showMessageDialog(null, "El Nombre debe Contener un Máximo de 50 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextField_02.setBackground(Color.RED);
                                    TextField_02.setText("");
                                    TextField_02.requestFocus();
                                } else {
                                    TextField_02.setBackground(Color.GREEN);
                                    System.out.println("Nombre_Cliente: Ok!.");
                                }
                            }

                            if (this.Validate_Apellido_Cliente(Apellido_Cliente) == false) {
                                JOptionPane.showMessageDialog(null, "Ingrese Apellidos Válidos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                TextField_03.setBackground(Color.RED);
                                TextField_03.setText("");
                                TextField_03.requestFocus();
                            } else {
                                if ((Apellido_Cliente.length()) > 50) {
                                    JOptionPane.showMessageDialog(null, "El Apellido debe Contener un Máximo de 50 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                    TextField_03.setBackground(Color.RED);
                                    TextField_03.setText("");
                                    TextField_03.requestFocus();
                                } else {
                                    TextField_03.setBackground(Color.GREEN);
                                    System.out.println("Apellido_Cliente: Ok!.");
                                }
                            }

                            if ((Direccion_Cliente.length()) > 50) {
                                JOptionPane.showMessageDialog(null, "La Dirección debe Contener un Máximo de 50 Caracteres.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                                TextField_04.setBackground(Color.RED);
                                TextField_04.setText("");
                                TextField_04.requestFocus();
                            } else {
                                TextField_04.setBackground(Color.GREEN);
                                System.out.println("Direccion_Cliente: Ok!.");
                            }

                            if ((TextField_01.getText()).isEmpty() == true || (TextField_02.getText()).isEmpty() == true || (TextField_03.getText()).isEmpty() == true || (TextField_04.getText()).isEmpty() == true) {
                                System.out.println("Try Again!");
                            } else {
                                Modelo_Cliente Obj_Modelo_Cliente = new Modelo_Cliente();

                                Obj_Modelo_Cliente.setDNI_Cliente(Integer.parseInt(DNI_Cliente));
                                Obj_Modelo_Cliente.setNombre_Cliente(Nombre_Cliente);
                                Obj_Modelo_Cliente.setApellido_Cliente(Apellido_Cliente);
                                Obj_Modelo_Cliente.setDireccion_Cliente(Direccion_Cliente);
                                Obj_Modelo_Cliente.setFecha_Nacimiento_Cliente(Fecha_Nacimiento_Cliente);

                                try {
                                    if (Obj_Controlador_Cliente.Insertar_Cliente(Obj_Modelo_Cliente) == true) {
                                        this.Show_Confirm_Dialog();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Error al Registrar el Cliente.", "Error", JOptionPane.ERROR_MESSAGE);
                                    }
                                } catch (SQLException | ClassNotFoundException Obj_SQLException_ClassNotFoundException) {
                                    Logger.getLogger(MySQL_Connection.class.getName()).log(Level.SEVERE, Obj_SQLException_ClassNotFoundException.getMessage());
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_Button_01ActionPerformed

    private void Button_02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_02ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_Button_02ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_01;
    private javax.swing.JButton Button_02;
    private com.toedter.calendar.JDateChooser DateChooser_01;
    private javax.swing.JLabel Label_01;
    private javax.swing.JLabel Label_02;
    private javax.swing.JLabel Label_03;
    private javax.swing.JLabel Label_04;
    private javax.swing.JLabel Label_05;
    private javax.swing.JLabel Label_06;
    private javax.swing.JPanel Panel_01;
    private javax.swing.JPanel Panel_02;
    private javax.swing.JTextField TextField_01;
    private javax.swing.JTextField TextField_02;
    private javax.swing.JTextField TextField_03;
    private javax.swing.JTextField TextField_04;
    // End of variables declaration//GEN-END:variables
}